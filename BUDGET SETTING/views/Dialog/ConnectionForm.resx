<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Closebtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uPUcjAAAAABJRU5ErkJggg==
</value>
  </data>
</root>